package africa.box.dm.config;

import java.io.File;
import java.io.FileOutputStream;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.Optional;

import africa.box.dm.db.entities.Compte;
import africa.box.dm.db.entities.CompteDocument;
import africa.box.dm.service.CompteService;
import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.ss.usermodel.FontUnderline;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;


@Service
public class PdfVoloTemplate {
    private MyAppConfig appConfig;

    @Autowired(required=true)
    CompteService compteService;
//    String upBasePath = appConfig.getUploadBasePath();

//        if(StringUtils.isEmpty(upBasePath)){
//        upBasePath = System.getProperty("java.io.tmpdir");
//    }

    LocalDate localDate = LocalDate.now() ;
//    String filename ="Contrat_ouverture_compte.pdf";
//    String  path="C:\\DEMATER" + File.separator + localDate.getYear() +
//            File.separator + localDate.getMonth()+
//            File.separator ;

//    String FILE = path;
    private static Font articleFont = new Font(Font.FontFamily.TIMES_ROMAN, 14,
            Font.BOLD|Font.UNDERLINE);

    private static Font titleCatFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD|Font.UNDERLINE);
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 14,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document,Compte cmpt) {
        document.addTitle("My first PDF");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Lars Vogel");
        document.addCreator("Lars Vogel");
    }



    public String voloTemplate (Document document,String businessKey) {
//        File dir = new File(FILE);
//        dir.mkdirs();
        Optional<Compte> compte = compteService.getCompte(businessKey);
        Compte cmpt=null;
        cmpt=compte.get();

        try {

            document.open();
//            addMetaData(document,cmpt);
            addTitlePage(document,cmpt);
            addContent(document,cmpt);
            document.close();
//            writer.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

        return "fait 2";
    }

    private static void addTitlePage(Document document,Compte cmpt)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        Paragraph titleParagraph = new Paragraph("FORMULAIRE TYPE D'OBTENTION DE CONSENTEMENTENT DANS LE CADRE DU SYSTEME DE PARTAGE D'INFORMATION SUR LE CREDIT DANS L'UEMOA",titleCatFont);
        titleParagraph.setAlignment(Element.ALIGN_CENTER);
//        titleParagraph.add(FontUnderline);
        preface.add(titleParagraph);

        addEmptyLine(preface, 2);
        // Will create: Report generated by: _name, _date
//        preface.add(new Paragraph(
//                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
//                smallBold));


        if (cmpt.getTypeDemandeur().equals("morale")) {
            preface.add(new Paragraph(
                    cmpt.getSousTypeClient().toUpperCase()+", "+cmpt.getNomSociete()+",créée le "+cmpt.getDateCreationSociete()+", registre de commerce numero : "+cmpt.getNumeroRegistreCommerce()+", au capitale FCFA "+cmpt.getCapitalEntreprise()+" ayant pour adresse du siège "+cmpt.getVille()+", " +cmpt.getAdresse()+", "+cmpt.getSituationGeographique()+
                            " .",
                    smallBold));
            addEmptyLine(preface, 1);
        }

        if (cmpt.getTypeDemandeur().equals("physique")) {
            preface.add(new Paragraph(
                    "Je sousigné , Monsieur/Madame, "+cmpt.getNomDemandeur()+" "+cmpt.getPrenomDemandeur()+", né(e) le "+cmpt.getDateDeNaissance()+" à "+cmpt.getLieuDeNaissance()+", " +cmpt.getPoste()+
                            ", résident à "+cmpt.getAdresse()+",ayant pour numero de téléphone "+cmpt.getMobile()+" .",
                    smallBold));
            addEmptyLine(preface, 1);
        }






//
//        preface.add(new Paragraph(
//                "This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
//                redFont));

        document.add(preface);
        // Start a new page
//        document.newPage();
    }

    private static void addContent(Document document,Compte cmpt) throws DocumentException {
        Paragraph preface = new Paragraph();
        Anchor anchor = new Anchor("Arcticle 1 :", articleFont);
        anchor.setName("Arcticle 1");

        // Second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);
//
//        Paragraph subPara = new Paragraph("Subcategory 1", subFont);
//        Section subCatPart = catPart.addSection(subPara);
//        subCatPart.add(new Paragraph("Hello"));
//
//        subPara = new Paragraph("Subcategory 2", subFont);
//        subCatPart = catPart.addSection(subPara);
//        subCatPart.add(new Paragraph("Paragraph 1"));
//        subCatPart.add(new Paragraph("Paragraph 2"));
//        subCatPart.add(new Paragraph("Paragraph 3"));

        // add a list
//        createList(subCatPart);
//        Paragraph paragraph = new Paragraph();
//        addEmptyLine(paragraph, 5);
//        subCatPart.add(paragraph);

        // add a table
//        createTable(subCatPart);

        // now add all this to the document
        document.add(catPart);
        addEmptyLine(preface, 1);

        preface.add(new Paragraph(
                "Accepte que les informations de crédit, historiques et courantes, me concernant notamment, les soldes approuvés et en souffrance, les limites de crédit, les cessations de paiement, le solde des arriérés auprès de Box Banking soient transmises à CREDITINFO VOLO 14 Résidence Le Front Lagunaire, Plateau Abidjan : 01 BP 11266 Abidjan 01, Côte D'Ivoire [Art 41 points 2, 3 et 4, Art 44, points 1 et 2].\n" +
                        "Accepte que les informations précitées soient communiquées par CREDITINFO VOLO aux établissements ayant accès à sa (leurs) base(s) de données, y compris ceux situés sur le territoire d'un autre Etat membre de l'UMOA [Art 42 point 1, Art 44, points 4] "
        ));

//        preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));
        addEmptyLine(preface, 2);
        document.add(preface);


//        document.newPage();

        // Next section
//        anchor = new Anchor("Article 2 :", articleFont);
//        anchor.setName("Article 2 ");
//
//        // Second parameter is the number of the chapter
//        Chapter   catPart2 = new Chapter(new Paragraph(anchor), 2);
//
////        subPara = new Paragraph("Subcategory", subFont);
////        subCatPart = catPart.addSection(subPara);
////        subCatPart.add(new Paragraph("This is a very important message"));
//
//        // now add all this to the document
//        document.add(catPart2);
//        addEmptyLine(preface, 1);
//        preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));    preface.add(new Paragraph(
//                "Contrat VOLO Contrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLOContrat VOLO "
//        ));



//        document.add(catPart3);
//        document.add(preface);


    }

    private static void createTable(Section subCatPart)
            throws BadElementException {
        PdfPTable table = new PdfPTable(3);

        // t.setBorderColor(BaseColor.GRAY);
        // t.setPadding(4);
        // t.setSpacing(4);
        // t.setBorderWidth(1);

        PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Table Header 2"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Table Header 3"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        table.addCell("1.0");
        table.addCell("1.1");
        table.addCell("1.2");
        table.addCell("2.1");
        table.addCell("2.2");
        table.addCell("2.3");

        subCatPart.add(table);

    }

    private static void createList(Section subCatPart) {
        List list = new List(true, false, 10);
        list.add(new ListItem("First point"));
        list.add(new ListItem("Second point"));
        list.add(new ListItem("Third point"));
        subCatPart.add(list);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }


}
